// Be careful what you import here as it will increase the service worker bundle size

import { initializeApp } from 'firebase/app'
import type { FirebaseApp, FirebaseOptions } from 'firebase/app'

export const FIREBASE_IS_PRODUCTION = !!process.env.NEXT_PUBLIC_IS_PRODUCTION

const FIREBASE_API_KEY_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_API_KEY_PRODUCTION || ''
const FIREBASE_AUTH_DOMAIN_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN_PRODUCTION || ''
const FIREBASE_DATABASE_URL_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL_PRODUCTION || ''
const FIREBASE_PROJECT_ID_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID_PRODUCTION || ''
const FIREBASE_STORAGE_BUCKET_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET_PRODUCTION || ''
const FIREBASE_MESSAGING_SENDER_ID_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID_PRODUCTION || ''
const FIREBASE_APP_ID_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_APP_ID_PRODUCTION || ''
const FIREBASE_MEASUREMENT_ID_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID_PRODUCTION || ''
const FIREBASE_VAPID_KEY_PRODUCTION = process.env.NEXT_PUBLIC_FIREBASE_VAPID_KEY_PRODUCTION || ''

const FIREBASE_API_KEY_STAGING = process.env.NEXT_PUBLIC_FIREBASE_API_KEY_STAGING || ''
const FIREBASE_AUTH_DOMAIN_STAGING = process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN_STAGING || ''
const FIREBASE_DATABASE_URL_STAGING = process.env.NEXT_PUBLIC_FIREBASE_DATABASE_URL_STAGING || ''
const FIREBASE_PROJECT_ID_STAGING = process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID_STAGING || ''
const FIREBASE_STORAGE_BUCKET_STAGING = process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET_STAGING || ''
const FIREBASE_MESSAGING_SENDER_ID_STAGING = process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID_STAGING || ''
const FIREBASE_APP_ID_STAGING = process.env.NEXT_PUBLIC_FIREBASE_APP_ID_STAGING || ''
const FIREBASE_MEASUREMENT_ID_STAGING = process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID_STAGING || ''
const FIREBASE_VAPID_KEY_STAGING = process.env.NEXT_PUBLIC_FIREBASE_VAPID_KEY_STAGING || ''

export const FIREBASE_VAPID_KEY = FIREBASE_IS_PRODUCTION ? FIREBASE_VAPID_KEY_PRODUCTION : FIREBASE_VAPID_KEY_STAGING

export const FIREBASE_OPTIONS: FirebaseOptions = {
  apiKey: FIREBASE_IS_PRODUCTION ? FIREBASE_API_KEY_PRODUCTION : FIREBASE_API_KEY_STAGING,
  authDomain: FIREBASE_IS_PRODUCTION ? FIREBASE_AUTH_DOMAIN_PRODUCTION : FIREBASE_AUTH_DOMAIN_STAGING,
  databaseURL: FIREBASE_IS_PRODUCTION ? FIREBASE_DATABASE_URL_PRODUCTION : FIREBASE_DATABASE_URL_STAGING,
  projectId: FIREBASE_IS_PRODUCTION ? FIREBASE_PROJECT_ID_PRODUCTION : FIREBASE_PROJECT_ID_STAGING,
  storageBucket: FIREBASE_IS_PRODUCTION ? FIREBASE_STORAGE_BUCKET_PRODUCTION : FIREBASE_STORAGE_BUCKET_STAGING,
  messagingSenderId: FIREBASE_IS_PRODUCTION
    ? FIREBASE_MESSAGING_SENDER_ID_PRODUCTION
    : FIREBASE_MESSAGING_SENDER_ID_STAGING,
  appId: FIREBASE_IS_PRODUCTION ? FIREBASE_APP_ID_PRODUCTION : FIREBASE_APP_ID_STAGING,
  measurementId: FIREBASE_IS_PRODUCTION ? FIREBASE_MEASUREMENT_ID_PRODUCTION : FIREBASE_MEASUREMENT_ID_STAGING,
} as const

export const initializeFirebase = () => {
  const hasFirebaseOptions = Object.values(FIREBASE_OPTIONS).every(Boolean)

  if (!hasFirebaseOptions) {
    return
  }

  let app: FirebaseApp | undefined

  try {
    app = initializeApp(FIREBASE_OPTIONS)
  } catch (e) {
    console.error('[Firebase] Initialization failed', e)
  }

  return app
}
